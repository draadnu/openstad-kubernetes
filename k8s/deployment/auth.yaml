apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ .Release.Namespace }}
  name: openstad-secrets-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ .Release.Namespace }}
  name: secret-creator
rules:
  - apiGroups: ['']
    resources: ['secrets']
    verbs: ["create", "update", "patch", "get", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-creator-role-to-openstad-secrets-sa
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: ''
  kind: Role
  name: secret-creator
subjects:
  - kind: ServiceAccount
    name: openstad-secrets-sa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-initialize-auth-certs
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-test-deploy
  template:
    metadata:
      labels:
        app: k8s-test-deploy
    spec:
      serviceAccountName: openstad-secrets-sa
      volumes:
        - name: keys-vol
      containers:
        - image: bitnami/kubectl
          imagePullPolicy: IfNotPresent
          name: kubectl-test-container
          volumeMounts:
            - mountPath: /home/keys
              name: keys-vol
              readOnly: false
          command: ["/bin/sh", "-c"]
          args:
            - echo "Generating certificates";
              cd /home/keys;
              pwd;
              openssl genrsa -out ./privatekey.pem 2048;
              openssl req -new -key ./privatekey.pem -out ./certrequest.csr -subj "/C=NL/ST=All/L=Amsterdam/O=openstad/CN=$COMMON_NAME";
              openssl x509 -req -in ./certrequest.csr -signkey ./privatekey.pem -days 3650 -out ./certificate.pem;
              echo "Certificates are generated";
              ls -ltra;
              kubectl -n "$KUBERNETES_NAMESPACE" delete secret openstad-auth-certificates;
              echo "Creating keys in namespace $KUBERNETES_NAMESPACE";
              kubectl -n "$KUBERNETES_NAMESPACE" create secret generic openstad-auth-certificates --from-file ./privatekey.pem --from-file ./certrequest.csr --from-file ./certificate.pem;
              echo "Secrets are stored";
          env:
            - name: COMMON_NAME
              valueFrom:
                secretKeyRef:
                  key: auth
                  name: openstad-hosts
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deploy
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-container
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: auth-container
    spec:
      volumes:
        - name: certs
          secret:
            secretName: openstad-auth-certificates
      containers:
      - env:
        - name: APP_URL
          valueFrom:
            secretKeyRef:
              key: auth
              name: openstad-hosts
        - name: ADMIN_REDIRECT_URL
          valueFrom:
            secretKeyRef:
              key: frontend
              name: openstad-hosts
        - name: SESSION_SECRET
          value: "1234567890123456"
        - name: DB_VENDOR
          valueFrom:
            secretKeyRef:
              key: type
              name: openstad-db-credentials
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: openstad-db-credentials
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: openstad-db-credentials
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              key: hostname
              name: openstad-db-credentials
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              key: hostport
              name: openstad-db-credentials
        - name: DB_DATABASE
          valueFrom:
            secretKeyRef:
              key: database
              name: openstad-auth-db
        - name: MAIL_SERVER_URL
          valueFrom:
            secretKeyRef:
              key: host
              name: openstad-auth-mail
        - name: MAIL_SERVER_PORT
          valueFrom:
            secretKeyRef:
              key: port
              name: openstad-auth-mail
        - name: MAIL_SERVER_SECURE
          value: "yes"
        - name: MAIL_SERVER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: openstad-auth-mail
        - name: MAIL_SERVER_USER_NAME
          valueFrom:
            secretKeyRef:
              key: user
              name: openstad-auth-mail
        - name: EMAIL_ASSETS_URL
          valueFrom:
            secretKeyRef:
              key: email_assets_url
              name: openstad-auth-mail
        - name: FROM_NAME
          value: Openstad api
        - name: FROM_EMAIL
          valueFrom:
            secretKeyRef:
              key: user
              name: openstad-auth-mail
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: openstad/auth:test
        imagePullPolicy: Always
        name: auth-container
        volumeMounts:
          - mountPath: "/home/app/certs"
            name: certs
            readOnly: true
        ports:
        - containerPort: 4000
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 500M
      initContainers:
      - args:
        - knex migrate:latest
        command:
        - /bin/sh
        - -c
        env:
        - name: DB_ADDR
          valueFrom:
            secretKeyRef:
              key: hostname
              name: openstad-db-credentials
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              key: hostport
              name: openstad-db-credentials
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              key: hostname
              name: openstad-db-credentials
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: openstad-db-credentials
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: openstad-db-credentials
        - name: DB_NAME
          value: auth
        image: openstad/auth:test
        imagePullPolicy: IfNotPresent
        name: init-db-ready
